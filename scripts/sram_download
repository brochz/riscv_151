#!/usr/bin/env python3
# ported from /home/ff/eecs151/tools-151/bin/coe_to_serial
import os
import serial
import sys
import time

from serial.serialutil import Timeout

# Windows
if os.name == 'nt':
    ser = serial.Serial()
    ser.timeout = 0.01
    ser.baudrate = 115200
    ser.port = 'COM7' # CHANGE THIS COM PORT
    ser.open()
else:
    ser = serial.Serial('/dev/ttyUSB0')
    ser.baudrate = 115200

def store_u32(data, address):
    data = f"{data:08x}"   #8 test data 
    address = f"{address:08x}"
    string = f"sw {data} {address} "   #the string send to FPGA 
    #sending data 
    for c in string:
        ser.write(c.encode("utf-8")) 
        time.sleep(0.01)         #FPGA UART has only 1 byte rx buffer
    #display result  
    respons = ser.read(100)
    print(respons, end=" ")


def load_u32(address):
    string = f"lw {address:08x} "    #send load string to FPGA
    for c in string:
        ser.write(c.encode("utf-8")) 
        time.sleep(0.01)
    #display result 
    respons = ser.read(100)
    print(respons, end=" ")

    return int(respons.decode("utf-8").split(":")[1][:8], 16)

#clear last command 
ser.write(b" ")
time.sleep(0.1)
line = ser.read(100)  #clear input buffer 
error = []





store_u32(0, 0xc0000000)

for i in range(23):
    store_u32(100, 0xc0000000 + (1<<(i+2)))
    load_u32( 0xc0000000)
    print(f"{i}  .. {0xc0000000 + (1<<(i+2)):032b} ") 

exit()





print("Starting test........................")
print("Test 1 ....")
#test 1 
for i in range(0x0000, 0x1fffff>>2, 0xfff):
    #store wd
    store_u32(i*2, 0xc0000000+i*4)
    #load data
    data_rec = load_u32(0xc0000000+i*4)
    #check...
    status = 0 if data_rec==i*2 else 1
    error.append(status) 

    print(f"addr: 0x{0xc0000000+i*4:08x} >>> data_rec={data_rec} {status}")


if(sum(error) > 0):
    print("Test 1 failed ...")
    exit()

print("\n\n\n")
print("Test 2 ....")
#test 2
for i in range(0x0000, 0x1fffff>>2, 0xfff):
    #store wd
    store_u32(i*2 + 1, 0xc0000000+i*4)
    print()
for i in range(0x0000, 0x1ffff>>2, 0xfff):
    #store wd
    data_rec = load_u32(0xc0000000+i*4)
    print()
    status = 0 if data_rec==i*2 + 1 else 1
    error.append(status) 

if(sum(error) > 0):
    print("Test 2 failed ...")
    exit()

print("TESTS PASS")

